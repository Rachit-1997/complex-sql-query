-- CTE to get each employee's current salary
WITH cte_Q1 AS (
    SELECT DISTINCT employee_id,
    FIRST_VALUE(salary) OVER(PARTITION BY employee_id ORDER BY change_date DESC) AS latest_salary
    FROM salary_history 
),

-- CTE to calculate salary change metrics
cte_Q3 AS (
    SELECT *,
    LAG(change_date) OVER(PARTITION BY employee_id ORDER BY change_date) AS prev_change_date,
    -- Calculate months between salary changes
    (EXTRACT(YEAR FROM change_date) - EXTRACT(YEAR FROM LAG(change_date) OVER(PARTITION BY employee_id ORDER BY change_date)))*12 +
        (EXTRACT(MONTH FROM change_date) - EXTRACT(MONTH FROM LAG(change_date) OVER(PARTITION BY employee_id ORDER BY change_date)))
    AS month_diff,
    -- Calculate percentage change from previous salary
    (salary - LAG(salary) OVER(PARTITION BY employee_id ORDER BY change_date))*100.0 / 
                                LAG(salary) OVER(PARTITION BY employee_id ORDER BY change_date)
    AS percent_change
    FROM salary_history    
),

-- CTE to aggregate metrics by employee
cte_Q2_to_Q5 AS (
    SELECT 
    employee_id, 
    SUM(CASE WHEN promotion = 'Yes' THEN 1 ELSE 0 END) AS promotions,
    ROUND(MAX(percent_change),2) AS max_hike_percent,
    -- Check if salary never decreased
    CASE WHEN COUNT(*) = SUM(CASE WHEN percent_change > 0 OR percent_change IS NULL THEN 1 ELSE 0 END)
                THEN 'Yes' ELSE 'No' END AS Never_Decreased,
    ROUND(AVG(month_diff),2) AS Avg_months_bw_changes        
    FROM cte_Q3
    GROUP BY employee_id
),

-- CTE to calculate overall growth rate from first to current salary
cte_growth_rate AS (
    SELECT employee_id, MAX(growth_rate) AS growth_rate 
    FROM (
        SELECT *,
        (FIRST_VALUE(salary) OVER(PARTITION BY employee_id ORDER BY change_date DESC) - 
            FIRST_VALUE(salary) OVER(PARTITION BY employee_id ORDER BY change_date))*100.0 /
                 FIRST_VALUE(salary) OVER(PARTITION BY employee_id ORDER BY change_date) AS growth_rate
        FROM salary_history
    )
    GROUP BY employee_id     
),

-- CTE to rank employees by growth rate (with join date as tiebreaker)
cte_Q6 AS (
    SELECT c.*, e.join_date,
    RANK() OVER(ORDER BY growth_rate DESC, join_date) AS rnk
    FROM cte_growth_rate c 
    JOIN employees e ON c.employee_id = e.employee_id
)

-- Final result combining all metrics
SELECT 
    c1.employee_id,
    e.name AS Name,
    c1.latest_salary,
    c2.promotions, 
    c2.max_hike_percent, 
    c2.Never_Decreased, 
    c2.Avg_months_bw_changes,
    c3.rnk AS rank_by_growth
FROM
    cte_Q1 c1 
    JOIN employees e ON c1.employee_id = e.employee_id
    JOIN cte_Q2_to_Q5 c2 ON c1.employee_id = c2.employee_id
    JOIN cte_Q6 c3 ON c1.employee_id = c3.employee_id 
ORDER BY c1.employee_id;